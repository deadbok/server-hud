Vagrant.configure("2") do |config|
    config.vm.box = "debian/stretch64"
    config.hostmanager.enabled = true
    config.hostmanager.manage_host = true
    config.hostmanager.manage_guest = true
    config.hostmanager.ignore_private_ip = false
    config.hostmanager.include_offline = true

    serverhud_version = "0.5.0"


    config.vm.define "serverhud-firewall" do |shf|
        shf.vm.box = "debian/stretch64"
        shf.vm.host_name = "serverhud-firewall"
        shf.vm.network "private_network",
                       ip: "192.168.50.2",
                       virtualbox__intnet: "server-hud"
        shf.vm.provider "virtualbox" do |vb|
            vb.memory = "256"
        end
        shf.vm.provision "file", source: "firewall/config.py", destination: "config.py", run: "always"
        shf.vm.provision "shell", path: "scripts/firewall.sh", name: "Install firewall"
        shf.vm.provision "shell", run: "always", path: "scripts/serverhud-server.sh", name: "Install serverhud server service"
    end

    config.vm.define "serverhud-webserver" do |shw|
        shw.vm.box = "debian/stretch64"
        shw.vm.host_name = "serverhud-webserver"
        shw.vm.network "private_network",
                       ip: "192.168.50.3",
                       virtualbox__intnet: "server-hud"
        shw.vm.provider "virtualbox" do |vb|
            vb.memory = "512"
        end
        shw.vm.provision "file", source: "webserver/etc", destination: "etc", run: "always"
        shw.vm.provision "file", source: "webserver/config.py", destination: "config.py", run: "always"
        shw.vm.provision "shell", path: "scripts/webserver.sh", name: "Install webserver"
        shw.vm.provision "shell", run: "always", path: "scripts/serverhud-server.sh", name: "Install serverhud server service"
     end

    config.vm.define "serverhud-client" do |shc|
        shc.vm.box = "debian/stretch64"
        shc.vm.host_name = "serverhud-client"
        shc.vm.network "private_network",
                       ip: "192.168.50.4",
                       virtualbox__intnet: "server-hud"
        shc.vm.network "forwarded_port", guest: 5000, host: 5000
        shc.vm.provider "virtualbox" do |vb|
            vb.gui = true
            vb.memory = "1024"
        end
        shc.vm.provision "file", source: "client/config.py", destination: "config.py", run: "always"
        shc.vm.provision "file", source: "client/etc", destination: "etc", run: "always"
        shc.vm.provision "file", source: "client/opt", destination: "opt", run: "always"
        shc.vm.provision "shell", path: "scripts/non-free-firmware.sh", name: "Install non free firmware"
        shc.vm.provision "shell", path: "scripts/bootsplash.sh", name: "Setup boot splash"
        shc.vm.provision "shell", path: "scripts/browser.sh", name: "Install browser"
        shc.vm.provision "shell", run: "always", path: "scripts/serverhud-client.sh", name: "Install serverhud client service"
        shc.vm.provision "shell", run: "always", path: "scripts/kiosk.sh", name: "Setup kiosk mode for user serverhud"
        shc.vm.provision "shell", run: "always", name: "Reboot client machine",
            inline: "reboot"
    end

    config.vm.provision "file", source: "../../dist/serverhud-#{serverhud_version}-py3-none-any.whl", destination: "serverhud-#{serverhud_version}-py3-none-any.whl", run: "always"
    config.vm.provision "file", source: "../../systemd/serverhud-client.service", destination: "serverhud-client.service", run: "always"
    config.vm.provision "file", source: "../../systemd/serverhud-server.service", destination: "serverhud-server.service", run: "always"
    config.vm.provision "shell", path: "scripts/serverhud-user.sh", name: "Setup serverhud user"
    config.vm.provision "shell", run: "always" do |s|
        s.path = "scripts/serverhud-install.sh"
        s.args   = "#{serverhud_version}"
        s.name = "Install serverhud using pip"
    end
end
